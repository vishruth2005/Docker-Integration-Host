# Generated by Django 5.2.1 on 2025-07-01 07:25

from django.db import migrations, models
import uuid

def copy_host_uuid(apps, schema_editor):
    DockerHost = apps.get_model('api', 'DockerHost')
    ContainerRecord = apps.get_model('api', 'ContainerRecord')
    Volume = apps.get_model('api', 'Volume')
    Network = apps.get_model('api', 'Network')

    # Build mapping from old int id to new uuid
    host_map = {host.old_id: host.id for host in DockerHost.objects.all()}

    # For each referencing model, copy the uuid to the new field
    for model in [ContainerRecord, Volume, Network]:
        for obj in model.objects.all():
            old_host_id = getattr(obj, 'host_id_int', None)
            if old_host_id is not None and old_host_id in host_map:
                obj.host_id_uuid = host_map[old_host_id]
                obj.save(update_fields=['host_id_uuid'])


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0005_alter_dockerhost_id'),
    ]

    operations = [
        # 1. Add new nullable UUID field for host FK
        migrations.AddField(
            model_name='containerrecord',
            name='host_id_uuid',
            field=models.UUIDField(null=True),
        ),
        migrations.AddField(
            model_name='volume',
            name='host_id_uuid',
            field=models.UUIDField(null=True),
        ),
        migrations.AddField(
            model_name='network',
            name='host_id_uuid',
            field=models.UUIDField(null=True),
        ),
        # 2. Temporarily rename old FK so we can keep the name 'host_id' for the new one
        migrations.RenameField(
            model_name='containerrecord',
            old_name='host',
            new_name='host_id_int',
        ),
        migrations.RenameField(
            model_name='volume',
            old_name='host',
            new_name='host_id_int',
        ),
        migrations.RenameField(
            model_name='network',
            old_name='host',
            new_name='host_id_int',
        ),
        # 3. Populate the new UUID field
        migrations.RunPython(copy_host_uuid, reverse_code=migrations.RunPython.noop),
        # 4. Remove the old int FK field
        migrations.RemoveField(
            model_name='containerrecord',
            name='host_id_int',
        ),
        migrations.RemoveField(
            model_name='volume',
            name='host_id_int',
        ),
        migrations.RemoveField(
            model_name='network',
            name='host_id_int',
        ),
        # 5. Add the new FK (not null, to DockerHost, to_field='id')
        migrations.AddField(
            model_name='containerrecord',
            name='host',
            field=models.ForeignKey(
                to='api.DockerHost',
                to_field='id',
                db_column='host_id',
                on_delete=models.CASCADE,
                related_name='containers',
                null=False,
            ),
        ),
        migrations.AddField(
            model_name='volume',
            name='host',
            field=models.ForeignKey(
                to='api.DockerHost',
                to_field='id',
                db_column='host_id',
                on_delete=models.CASCADE,
                related_name='volumes',
                null=False,
            ),
        ),
        migrations.AddField(
            model_name='network',
            name='host',
            field=models.ForeignKey(
                to='api.DockerHost',
                to_field='id',
                db_column='host_id',
                on_delete=models.CASCADE,
                related_name='networks',
                null=False,
            ),
        ),
        # 6. Copy UUID values into the new FK field
        migrations.RunSQL(
            """
            UPDATE api_containerrecord SET host_id = host_id_uuid;
            UPDATE api_volume SET host_id = host_id_uuid;
            UPDATE api_network SET host_id = host_id_uuid;
            """,
            reverse_sql=migrations.RunSQL.noop
        ),
        # 7. Remove the temporary UUID fields
        migrations.RemoveField(
            model_name='containerrecord',
            name='host_id_uuid',
        ),
        migrations.RemoveField(
            model_name='volume',
            name='host_id_uuid',
        ),
        migrations.RemoveField(
            model_name='network',
            name='host_id_uuid',
        ),
    ]
