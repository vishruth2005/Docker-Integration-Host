# Generated by Django 5.2.1 on 2025-06-03 10:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DockerHost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_name', models.CharField(max_length=100)),
                ('host_ip', models.GenericIPAddressField()),
                ('docker_api_url', models.CharField(max_length=255)),
                ('port', models.PositiveIntegerField(blank=True, null=True)),
                ('connection_protocol', models.CharField(choices=[('tcp', 'TCP'), ('unix', 'Unix Socket'), ('ssh', 'SSH')], default='tcp', max_length=10)),
                ('auth_type', models.CharField(choices=[('none', 'None'), ('tls', 'TLS'), ('ssh', 'SSH')], default='none', max_length=10)),
                ('tls_cert', models.TextField(blank=True, null=True)),
                ('tls_key', models.TextField(blank=True, null=True)),
                ('tls_ca_cert', models.TextField(blank=True, null=True)),
                ('ssh_username', models.CharField(blank=True, max_length=50, null=True)),
                ('ssh_private_key', models.TextField(blank=True, null=True)),
                ('ssh_password', models.CharField(blank=True, max_length=100, null=True)),
                ('api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('labels', models.CharField(blank=True, help_text='Comma separated tags', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('operating_system', models.CharField(blank=True, max_length=100, null=True)),
                ('docker_version', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(default='inactive', max_length=50)),
                ('last_seen_at', models.DateTimeField(blank=True, null=True)),
                ('total_cpu_cores', models.PositiveIntegerField(blank=True, null=True)),
                ('total_memory_mb', models.PositiveIntegerField(blank=True, null=True)),
                ('running_containers_count', models.PositiveIntegerField(blank=True, null=True)),
                ('total_images_count', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docker_hosts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContainerRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_id', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('image', models.CharField(max_length=256)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_containers', to=settings.AUTH_USER_MODEL)),
                ('editable_by', models.ManyToManyField(blank=True, related_name='editable_containers', to=settings.AUTH_USER_MODEL)),
                ('viewable_by', models.ManyToManyField(blank=True, related_name='viewable_containers', to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='containers', to='api.dockerhost')),
            ],
        ),
    ]
